const { model, Schema } = require("mongoose");

const guildSchema = new Schema({
    guildId: {
        type: String,
        default: ""
    },
    invites: {
        joinChannel: {
            type: String,
            default: ""
        },
        joinMessage: {
            normal: {
                type: String,
                default: "**{memberMention}** vient de rejoindre. Il a √©t√© invit√© par **{inviterName}** qui a maintenant **{inviteCount} invites** !"
            },
            self: {
                type: String,
                default: "**{memberName}** s'est invit√©."
            },
            unknown: {
                type: String,
                default: "**{memberName}** viens de rejoindre mais je n'arrive pas √† savoir qui l'a invit√©. Assurez-vous d‚Äô√©viter les invitations √† usage unique et le bouton d‚Äôinvitation rapide."
            },
            vanity: {
                type: String,
                default: "**{memberName}** est arriv√© en utilisant l'invitation personnalis√©e **{inviteCode}**."
            }
        },
        leaveChannel: {
            type: String,
            default: ""
        },
        leaveMessage: {
            normal: {
                type: String,
                default: "**{memberName}** est parti. Il a √©t√© invit√© par **{inviterName}**."
            },
            unknown: {
                type: String,
                default: "**{memberName}** est parti mais je n'ai pas enregistr√© qui a invit√©."
            },
            vanity: {
                type: String,
                default: "**{memberName}** est parti. Il a √©t√© invit√© √† l‚Äôaide d‚Äôune invitation personnalis√©e."
            }
        },
        message: {
            type: String,
            default: "üí° Saviez-vous que vous pouvez ajouter votre propre message personnalis√© ici. Obtenez plus d‚Äôinformations avec la commande \`/sources-setmessage\`."
        },
        ranks: {
            type: Array,
            default: []
        },
        fake: {
            enabled: {
                type: Boolean,
                default: true
            },
            obligation: {
                type: Array,
                default: [1, 2]
            }
        }
    },
    tickets: {
        settings: {
            enabled: {
                type: Boolean,
                default: true
            },
            autoclose: {
                type: Boolean,
                default: false
            },
            threads: {
                enabled: {
                    type: Boolean,
                    default: false
                },
                channelId: {
                    type: String,
                    default: ""
                }
            },
            support: {
                type: String,
                default: ""
            },
            openedTicketPerUser: {
                type: Number,
                default: 1
            },
            number: {
                type: Number,
                default: 0
            },
            transcriptId: {
                type: String,
                default: ""
            }
        },
        panels: {
            type: [{
                panelId: String,
                messageId: String,
                channelId: String,
                categoryId: String,
                roles: Array,
                name: String,
                buttons: Array
            }],
            default: []
        }
    },
    infini: {
        maintenance: {
            type: Boolean,
            default: false
        },
        channel: {
            type: String,
            default: ""
        }
    },
    voice: {
        voiceId: {
            type: String,
            default: ""
        },
        interfaceId: {
            type: String,
            default: ""
        }
    },
    level: {
        settings: {
            enabled: {
                type: Boolean,
                default: false
            },
            message: {
                enabled: {
                    type: Boolean,
                    default: false
                },
                channel: {
                    type: String,
                    default: ""
                },
                image: {
                    type: Boolean,
                    default: false
                },
                content: {
                    type: String,
                    default: "F√©licitation ! vous √™tes pass√© niveau {level}"
                }
            },
            ratio: {
                max: {
                    type: Number,
                    default: 25
                },
                min: {
                    type: Number,
                    default: 15
                }
            },
            ignore: {
                channel: {
                    type: Array,
                    default: []
                },
                roles: {
                    type: Array,
                    default: []
                }
            },
            bonus: {
                channel: {
                    type: Array,
                    default: []
                },
                roles: {
                    type: Array,
                    default: []
                }
            }
        }
    }
});

guildSchema.indexes({ guildId: 1 });
module.exports = model("Guilds", guildSchema);